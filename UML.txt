@startuml

object Entity

package PlayerObj {
  object Player
  object Camera
  object PlayerStats
  object "PlayerMovementComponent" as mov
  object "AnimationController" as anim
  object PlayerInput
  object "WeaponCarrier" as weapons
}

package StateMachine {
  object "Finite State Machine" as fsm
  object StateHandler
  object States
  object PlayerAbilities
  PlayerAbilities : Double Jump
  PlayerAbilities : Ledge Grab
  PlayerAbilities : Sprint (default)
  PlayerAbilities : Walk
  PlayerAbilities : Melee
  PlayerAbilities : GloryKill
  diamond dia2

}

object "InteractSystem" as inter
object "Rune/SuitUpgradeSystem" as runes

weapons : CurrentWeapon
weapons : FoundWeapons
weapons : FoundWeaponMods
package ExampleWeapon {
  object "Weapon" as wpn
  object Viewmodel
  object "FireBehaviour" as fire1
  object "ModFireBehaviour" as fire2
  object "TracerVFX" as tracer
  object "Projectile" as proj
  diamond dia
}
diamond dmgDia
object "IDamageable" as Idmg

object UI
object WeaponUI



Player -up--|> Entity
Player --> mov
Player --> anim
Player -right-> Camera
PlayerStats --> Player
runes ...> PlayerStats
PlayerInput --> Player
inter ...> Player
mov --* fsm
fsm --> dia2
dia2 -down-> StateHandler
dia2 -down-> States
States -right-> PlayerAbilities

Player -left-> weapons
UI -down-> WeaponUI
weapons -down-> wpn
weapons --> WeaponUI
wpn -up-> WeaponUI
wpn -down-> fire1
fire1 --> tracer
fire1 -> mov : Knockback
wpn -left-> fire2
fire2 -> proj
fire1 -left-> dmgDia
proj -left--> dmgDia
dmgDia -left->Idmg
proj --> dia
tracer --> dia
 
wpn -down-> dia

dia -down-> Viewmodel

@enduml